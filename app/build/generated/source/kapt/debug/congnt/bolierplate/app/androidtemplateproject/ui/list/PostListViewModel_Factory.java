// Generated by Dagger (https://google.github.io/dagger).
package congnt.bolierplate.app.androidtemplateproject.ui.list;

import android.app.Application;
import congnt.bolierplate.app.androidtemplateproject.db.AppDatabase;
import congnt.bolierplate.app.androidtemplateproject.network.PostApi;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class PostListViewModel_Factory implements Factory<PostListViewModel> {
  private final Provider<Application> appProvider;

  private final Provider<AppDatabase> dbProvider;

  private final Provider<PostApi> postApiProvider;

  public PostListViewModel_Factory(
      Provider<Application> appProvider,
      Provider<AppDatabase> dbProvider,
      Provider<PostApi> postApiProvider) {
    this.appProvider = appProvider;
    this.dbProvider = dbProvider;
    this.postApiProvider = postApiProvider;
  }

  @Override
  public PostListViewModel get() {
    PostListViewModel instance = new PostListViewModel(appProvider.get());
    PostListViewModel_MembersInjector.injectDb(instance, dbProvider.get());
    PostListViewModel_MembersInjector.injectPostApi(instance, postApiProvider.get());
    return instance;
  }

  public static PostListViewModel_Factory create(
      Provider<Application> appProvider,
      Provider<AppDatabase> dbProvider,
      Provider<PostApi> postApiProvider) {
    return new PostListViewModel_Factory(appProvider, dbProvider, postApiProvider);
  }

  public static PostListViewModel newPostListViewModel(Application app) {
    return new PostListViewModel(app);
  }
}
