// Generated by Dagger (https://google.github.io/dagger).
package vn.bolierplate.network;

import dagger.internal.Factory;
import javax.inject.Provider;
import vn.bolierplate.db.AppDatabase;

public final class PostRepository_Factory implements Factory<PostRepository> {
  private final Provider<PostApi> postAPIProvider;

  private final Provider<AppDatabase> appDBProvider;

  public PostRepository_Factory(
      Provider<PostApi> postAPIProvider, Provider<AppDatabase> appDBProvider) {
    this.postAPIProvider = postAPIProvider;
    this.appDBProvider = appDBProvider;
  }

  @Override
  public PostRepository get() {
    return new PostRepository(postAPIProvider.get(), appDBProvider.get());
  }

  public static PostRepository_Factory create(
      Provider<PostApi> postAPIProvider, Provider<AppDatabase> appDBProvider) {
    return new PostRepository_Factory(postAPIProvider, appDBProvider);
  }
}
