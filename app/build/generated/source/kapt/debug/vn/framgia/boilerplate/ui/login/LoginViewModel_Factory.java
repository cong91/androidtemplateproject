// Generated by Dagger (https://google.github.io/dagger).
package vn.framgia.boilerplate.ui.login;

import android.app.Application;
import dagger.internal.Factory;
import javax.inject.Provider;
import vn.framgia.boilerplate.db.AppDatabase;
import vn.framgia.boilerplate.network.PostApi;

public final class LoginViewModel_Factory implements Factory<LoginViewModel> {
  private final Provider<Application> appProvider;

  private final Provider<AppDatabase> dbProvider;

  private final Provider<PostApi> postApiProvider;

  public LoginViewModel_Factory(
      Provider<Application> appProvider,
      Provider<AppDatabase> dbProvider,
      Provider<PostApi> postApiProvider) {
    this.appProvider = appProvider;
    this.dbProvider = dbProvider;
    this.postApiProvider = postApiProvider;
  }

  @Override
  public LoginViewModel get() {
    LoginViewModel instance = new LoginViewModel(appProvider.get());
    LoginViewModel_MembersInjector.injectDb(instance, dbProvider.get());
    LoginViewModel_MembersInjector.injectPostApi(instance, postApiProvider.get());
    return instance;
  }

  public static LoginViewModel_Factory create(
      Provider<Application> appProvider,
      Provider<AppDatabase> dbProvider,
      Provider<PostApi> postApiProvider) {
    return new LoginViewModel_Factory(appProvider, dbProvider, postApiProvider);
  }

  public static LoginViewModel newLoginViewModel(Application app) {
    return new LoginViewModel(app);
  }
}
