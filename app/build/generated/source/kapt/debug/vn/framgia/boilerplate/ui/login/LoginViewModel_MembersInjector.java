// Generated by Dagger (https://google.github.io/dagger).
package vn.framgia.boilerplate.ui.login;

import dagger.MembersInjector;
import javax.inject.Provider;
import vn.framgia.boilerplate.db.AppDatabase;
import vn.framgia.boilerplate.network.PostApi;

public final class LoginViewModel_MembersInjector implements MembersInjector<LoginViewModel> {
  private final Provider<AppDatabase> dbProvider;

  private final Provider<PostApi> postApiProvider;

  public LoginViewModel_MembersInjector(
      Provider<AppDatabase> dbProvider, Provider<PostApi> postApiProvider) {
    this.dbProvider = dbProvider;
    this.postApiProvider = postApiProvider;
  }

  public static MembersInjector<LoginViewModel> create(
      Provider<AppDatabase> dbProvider, Provider<PostApi> postApiProvider) {
    return new LoginViewModel_MembersInjector(dbProvider, postApiProvider);
  }

  @Override
  public void injectMembers(LoginViewModel instance) {
    injectDb(instance, dbProvider.get());
    injectPostApi(instance, postApiProvider.get());
  }

  public static void injectDb(LoginViewModel instance, AppDatabase db) {
    instance.db = db;
  }

  public static void injectPostApi(LoginViewModel instance, PostApi postApi) {
    instance.postApi = postApi;
  }
}
